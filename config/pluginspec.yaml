pluginInfo:
  # This is default sample specification
  # Feel free to change it
  # Call pdk showdoc pluginspec to see the list of available fields and their description
  pluginName: 'AWSCLI'
  version: '1.2.0'
  description: 'This plugin integrates with AWS CLI'
  author: 'Polina'
  supportUrl: 'pshubina@cloudbees.com'
  category: 'Amazon Web Services'
  repositoryUrl: 'https://github.com/electric-cloud-community/AWSCLI'
  shell: 'ec-perl'
  label: AWS CLI
  detailedDescription: |
    The AWS Command Line Interface (CLI) is a unified tool to manage your AWS services. With just one tool to download and configure, you can control multiple AWS services from the command line and automate them through scripts.

# Plugin configuration description
configuration:
  # This is a shell used for checking connection
  shell: 'ec-perl'
  # A script for checking connection will be generated
  checkConnection: 'true'
  # A set of fields will be added to process debug level in the configuration
  hasDebugLevel: true
  resourceName: '$[checkConnectionResource]'
  parameters:
    - name: config
      documentation: The name for the created configuration
      required: true
      type: entry
      label: Configuration Name
    - name: desc
      documentation: Description for the configuration
      required: false
      type: entry
      label: Description
    - name: cliPath
      documentation: Path to aws cli, e.g. /usr/bin/aws
      required: true
      type: entry
      label: CLI Path
      value: aws
    - name: region
      required: true
      type: entry
      label: Region
      htmlDocumentation: AWS Region to work with, e.g. us-west-1. See the list of available regions <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html" target="_blank">here</a>.
    - name: authType
      type: select
      label: Authorization Type
      htmlDocumentation: |
        Choose the authorization type.
        <b>environment</b> - will rely on machine's environment variables
        <b>basic</b> - requires Access Key ID and Key Secret
        <b>sts</b> - requires Access Key ID, Secret and the Role ARN.
        <b>sessionToken</b> - requires Access Key ID, Secret and the Session Token.
      required: true
      options:
        - name: Environment
          value: environment
        - name: Basic
          value: basic
        - name: STS
          value: sts
        - name: Session Token
          value: sessionToken
    - name: roleArn
      label: Role ARN
      documentation: The Amazon Resource Name (ARN) of the role to assume.
      dependsOn: authType
      condition: ${authType} == "sts"
      required: false
    - name: credential
      documentation: |
        Basic AWS credentials: Access Key ID and Secret.
      required: false
      type: credential
      label: AWS Credentials
      usernameLabel: Access Key ID
      passwordLabel: Access Key Secret
      retypePasswordLabel: Retype Access Key Secret
    - name: sessionName
      label: Session Name
      type: entry
      reuqired: false
      documentation: Session name to use for the role assumption.
      condition: ${authType} == "sts"
    - name: sessionToken_credential
      type: credential
      credentialType: secret
      label: Session Token
      documentation: Session token to use with Access Key ID and the Secret.
      required: false
      dependsOn: authType
      condition: ${authType} == "sessionToken"
    - name: checkConnectionResource
      label: Check Configuration Resource
      documentation: A resource that is used for the checking configuration. AWS ClI must be installed on this resource.
      required: false
      type: entry
      dependsOn: checkConnection
      condition: ${checkConnection} == "true"
      value: local
    - name: globalFlags
      label: Global CLI Flags
      documentation: Use this field to set global flags, e.g. --no-verify-ssl. One flag per line.
      type: textarea
      required: false
    - name: envConfig
      label: Environment Variables
      documentation: Use this field to set additional environment variables, e.g. AWS_MAX_ATTEMPTS=2
      required: false
      type: textarea


procedures:
-
  name: Run CLI
  description: This procedure runs a commmand using aws cli and the authorization data provided in the plugin's configuration.
  hasConfig: true
  parameters:
  -
    name: serviceName
    required: true
    type: entry
    documentation: Service to call, e.g. sts
    label: Service Name
  - name: env
    type: textarea
    label: Environment Variables
    required: false
    documentation: |
      Use this field to provide additional environment variables to the command.
      This field content and variables from the configuration will be merged and this field will take precedence.
  - name: arguments
    required: true
    type: textarea
    label: Arguments
    documentation: |
      Command arguments, one per line, e.g.

      describe-instances
      --page-size 5
  - name: outputFile
    type: entry
    required: false
    label: Output File
    documentation: If the value is provided, the command output will be saved to this file instead of the output parameter. The output parameter will be empty.
  outputParameters:
    output: 'Response received from the aws cli'


- name: Run Script
  description: This procedure allows to run a user-defined Perl script with the pre-built authorization data
  hasConfig: true
  parameters:
    - name: script
      required: true
      type: textarea
      label: Script
      documentation: |
        Perl script to execute from the context of the plugin, e.g.

        my $c = $self->wrapAuth();
        $c->addArguments('sts', 'get-caller-identity');
        my $r = $cli->runCommand($c);
        print Dumper $r;
  outputParameters:
    output: Response from the script